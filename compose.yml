version: "3.5"
# Use replace_ddclient.sh to replace all instances of ddclient
# with your_actual_service_name and  with YOUR_ACTUAL_SERVICE_NAME. 

networks:
  ddclient:
  ddclient-private:

volumes:
  ddclient:
  ddclient-db:

secrets:
  ddclient_admin_password:
    name: ${STACK_NAME:-technocore}_ddclient_admin_password
    external: true
  ddclient_ddclient_db_password:
    name: ${STACK_NAME:-technocore}_ddclient_ddclient_db_password
    external: true
  ddclient_db_ddclient_password:
    name: ${STACK_NAME:-technocore}_ddclient_db_ddclient_password
    external: true

services:
  ## Uncomment this if Traefik will be used for routing traffick to this service.
  #ingress:
  #  networks:
  #    - ddclient

  ddclient:
    deploy:
      labels:
      #  - traefik.frontend.rule=$_ROUTING_LABEL
      #  - traefik.frontend.priority=$_ROUTING_LABEL_PRIORITY
      #  # You'll need to set application's port here.
      #  - traefik.port=SET_ME_PLEASE
      #  - ${TRAEFIK_BASIC_AUTH}
      #  - traefik.enable=true
      #  - traefik.tags=ingress 
      #  - traefik.docker.network=${STACK_NAME:-technocore}_ddclient
      #  # Traefik service that listens to HTTP
      #  - traefik.redirectorservice.frontend.entryPoints=http
      #  - traefik.redirectorservice.frontend.redirect.entryPoint=https
      #  # Traefik service that listens to HTTPS
      #  - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      # Sometimes you have to pass in ${DOMAIN} to enable the correct link paths to be generated.
      #- MQTT_USER=${ddclient}
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD={{"{{DOCKER-SECRET:admin_password}}"}}
    image: ${image_provider:-scififarms}/technocore-ddclient:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - ddclient
      - ddclient-private
    #secrets:
    #  - source: ddclient_admin_password
    #    target: admin_password
    #  - source: ddclient_ddclient_db_password
    #    target: ddclient_db_password
    volumes:
      # Likely need to change this
      - ddclient:/var/lib/ddclient
      # This should in fact be all upper case.
      - ${DEV_MOUNT__MIGRATIONS:-$EMPTY_MOUNT}

  ddclient_db:
    deploy:
      labels:
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
    environment:
      - POSTGRES_USER=ddclient
      - POSTGRES_PASSWORD={{"{{DOCKER-SECRET:ddclient_password}}"}}
      - POSTGRES_DB=ddclient
    image: ${image_provider:-scififarms}/technocore-ddclient-db:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - ddclient-private
    secrets:
      - source: ddclient_db_admin_password
        target: admin_password
      - source: ddclient_db_ddclient_password
        target: ddclient_password
    volumes:
      # Likely need to change this
      - ddclient-db:/var/lib/postgresql/data
