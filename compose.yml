version: "3.5"

networks:
  ddclient:

volumes:
  ddclient:

secrets:
  ddclient_admin_password:
    name: ${STACK_NAME:-technocore}_ddclient_admin_password
    external: true
  ddclient_dns_user:
    name: ${STACK_NAME:-technocore}_ddclient_dns_user
    external: true
  ddclient_dns_token:
    name: ${STACK_NAME:-technocore}_ddclient_dns_token
    external: true

services:
  ## Uncomment this if Traefik will be used for routing traffick to this service.
  #ingress:
  #  networks:
  #    - ddclient

  ddclient:
    deploy:
      labels:
      #  - traefik.frontend.rule=$_ROUTING_LABEL
      #  - traefik.frontend.priority=$_ROUTING_LABEL_PRIORITY
      #  # You'll need to set application's port here.
      #  - traefik.port=SET_ME_PLEASE
      #  - ${TRAEFIK_BASIC_AUTH}
      #  - traefik.enable=true
      #  - traefik.tags=ingress 
      #  - traefik.docker.network=${STACK_NAME:-technocore}_ddclient
      #  # Traefik service that listens to HTTP
      #  - traefik.redirectorservice.frontend.entryPoints=http
      #  - traefik.redirectorservice.frontend.redirect.entryPoint=https
      #  # Traefik service that listens to HTTPS
      #  - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
        - user-provided-secret-dns_token=ddclient dns_token
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      - SERVER_HOSTNAME=$SERVER_HOSTNAME
      - DOMAIN=$DOMAIN
      - DNS_USERNAME=${DNS_USERNAME}
      - DNS_PROVIDER=${DNS_PROVIDER}
    image: ${image_provider:-scififarms}/technocore-ddclient:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - ddclient
    secrets:
    #  - source: ddclient_admin_password
    #    target: admin_password
      - source: ddclient_dns_token
        target: dns_token
    volumes:
      # Use tmpfs so that credentials never make it to disk. 
      - type: tmpfs
        target: /etc/ddclient
